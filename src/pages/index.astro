---
import { getCollection } from "astro:content";

import Layout from "@/layouts/Layout.astro";
import SocialLinks from "@/components/SocialLinks.astro";
import PostCard from "@/components/PostCard.astro";
import ProjectCard from "@/components/ProjectCard.astro";
import Link from "@/components/shared/Link.astro";
import convertAsteriskToStrongTag from "@/utils/convertAsteriskToStrongTag";

import presentation from "@/data/presentation";
import projects from "@/data/projects";

const posts = await getCollection("posts");
const sortedPosts = posts.sort(
  (a, b) =>
    new Date(b.data.publishedAt).getTime() -
    new Date(a.data.publishedAt).getTime()
);
---

<Layout>
  <main class="flex flex-col gap-20 px-10">
    <article class="flex flex-col gap-8">
      <div class="flex">
        <h1 class="text-primary text-3xl">{presentation.title}</h1>
        <img class="object-contain" src="/images/icons/i16-1.gif" />
      </div>

      <h2
        class="max-w-[60ch] leading-6"
        set:html={convertAsteriskToStrongTag(presentation.description)}
      />
      <!-- <SocialLinks /> -->
    </article>

    <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-primary text-lg">Latest posts</h3>
        <Link href="/posts" label="See all posts" isUnderline target="_self" />
      </header>
      {posts.length === 0 && <p>Soon, stay connected ðŸ‘€...</p>}

      <section class="flex flex-col gap-4 md:flex-row md:flex-wrap">
        {
          posts.length !== 0 &&
            posts
              .slice(0, 2)
              .map((post) => (
                <PostCard
                  publishedAt={post.data.publishedAt}
                  title={post.data.title}
                  description={post.data.description}
                  slug={post.slug}
                />
              ))
        }
      </section>
    </article>

    <!-- <article class="flex flex-col gap-8">
      <header class="flex w-full flex-row justify-between gap-2">
        <h3 class="text-lg text-primary">
          Selected projects ({projects.length})
        </h3>
      </header>
      {projects.length === 0 && <p>Oops, I must work^^^^^</p>}

      <section class="flex flex-col gap-4">
        {
          projects.length !== 0 &&
            projects.map((project) => <ProjectCard {...project} />)
        }
      </section>
    </article> -->

    <!-- Email me at <Link
          href={`mailto:${presentation.mail}`}
          label={presentation.mail}
        /> -->

   
  </main>
</Layout>
