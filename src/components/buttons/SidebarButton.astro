---
import type { HTMLAttributes } from "astro/types";

type Props = HTMLAttributes<"a"> & {
  label: string;
  img?: string;
  update?: boolean;
};

const { label, img, update,...props } = Astro.props;
import removeTrailingSlash from "@/utils/removeTrailingSlash";
const pathname = removeTrailingSlash(Astro.url.pathname);
---

<li 
class="block  hover:bg-[#d4efff] my-[0.5rem] border border-[#a0c8e0] border-dashed p-[0.5rem] rounded-[10px]"
    class:list={{
     'bg-[#d4efff]': pathname === props.href,
    'bg-[#f0fbff] hover:bg-[#d4efff]': pathname !== props.href,
    }}
>
  <a
    href={props.href}
    class="block w-full no-underline text-[#5596c2] "
    {...props}
    target="_self"
  >
    {
      img && (
        <div class="image-container">
          <img class="border-4 border-dotted border-[#add8e6] rounded-[20px] w-full mb-[1rem]" src={img} alt={label} />
        </div>
      )
    }
    <span
    class:list={[
      "label-text",
      { "has-update": update === true } 
    ]}
    >
      {label}
    </span>
    </a>
</li>


<style>
    li:hover {
    background: #d4efff;
    transform: scale(1.03);
  }
  .has-update {
    position: relative;
  }

  .has-update::after {
    content: ''; 
    display: inline-block;
    position: absolute;
    top: 50%;
    width: 17px;
    height: 7px;
    background-image: url('/src/images/icons/up_030.gif');
    background-size: contain;
    background-position: center;
    background-repeat: no-repeat;
    transform: translateY(-50%) translateX(.3125rem);

  }
</style>